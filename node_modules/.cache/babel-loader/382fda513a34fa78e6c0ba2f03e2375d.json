{"ast":null,"code":"var _jsxFileName = \"/home/azniv/AznivDev.portfolio/src/components/ScrollToTopHook.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"../styles/scrollToTopHookStyles/scrollToTopHookStyles.scss\";\nimport { FaArrowCircleUp } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollToTopHook = () => {\n  _s();\n\n  const [visible, setVisible] = useState();\n  const [scrollPosition, setScrollPosition] = useState(0); // Fix the final position. \n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  }; // Fix the final position.\n\n\n  const handleScroll = () => {\n    const position = window.pageYOffset;\n    setScrollPosition(position);\n  }; // Scroll up when the scroll position is greater than 400px.\n\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    if (scrollPosition > 400) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [scrollPosition]);\n\n  if (!visible) {\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scrollToTop\",\n    onClick: scrollToTop,\n    children: /*#__PURE__*/_jsxDEV(FaArrowCircleUp, {\n      className: \"topIcon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ScrollToTopHook, \"bUD5CAZfu8VfeM6hvtuEEiOP8tQ=\");\n\n_c = ScrollToTopHook;\nexport default ScrollToTopHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollToTopHook\");","map":{"version":3,"sources":["/home/azniv/AznivDev.portfolio/src/components/ScrollToTopHook.js"],"names":["useState","useEffect","FaArrowCircleUp","ScrollToTopHook","visible","setVisible","scrollPosition","setScrollPosition","scrollToTop","window","scrollTo","top","behavior","handleScroll","position","pageYOffset","addEventListener","removeEventListener"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAO,4DAAP;AACA,SAAQC,eAAR,QAA8B,gBAA9B;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,EAAtC;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,CAAD,CAApD,CAH0B,CAK1B;;AACA,QAAMQ,WAAW,GAAG,MAAM;AACtBC,IAAAA,MAAM,CAACC,QAAP,CAAgB;AAACC,MAAAA,GAAG,EAAE,CAAN;AAASC,MAAAA,QAAQ,EAAE;AAAnB,KAAhB;AACH,GAFD,CAN0B,CAU1B;;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,QAAQ,GAAGL,MAAM,CAACM,WAAxB;AACAR,IAAAA,iBAAiB,CAACO,QAAD,CAAjB;AACD,GAHD,CAX0B,CAgB1B;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;;AAEA,QAAGP,cAAc,GAAG,GAApB,EAAwB;AACpBD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD,MAEO;AACHA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,WAAO,MAAM;AACTI,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC;AACH,KAFD;AAIH,GAbQ,EAaN,CAACP,cAAD,CAbM,CAAT;;AAeA,MAAG,CAACF,OAAJ,EAAa;AACT,WAAO,KAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAG,aAAjB;AAA+B,IAAA,OAAO,EAAII,WAA1C;AAAA,2BACI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzCD;;GAAML,e;;KAAAA,e;AA2CN,eAAeA,eAAf","sourcesContent":["import {useState, useEffect} from \"react\";\nimport \"../styles/scrollToTopHookStyles/scrollToTopHookStyles.scss\";\nimport {FaArrowCircleUp} from \"react-icons/fa\";\n\nconst ScrollToTopHook = () => {\n  \n    const [visible, setVisible] = useState();\n    const [scrollPosition, setScrollPosition] = useState(0);\n    \n    // Fix the final position. \n    const scrollToTop = () => {\n        window.scrollTo({top: 0, behavior: \"smooth\"})\n    }\n\n    // Fix the final position.\n    const handleScroll = () => {\n      const position = window.pageYOffset;\n      setScrollPosition(position);\n    };\n\n    // Scroll up when the scroll position is greater than 400px.\n    useEffect(() => {\n        window.addEventListener(\"scroll\", handleScroll);\n\n        if(scrollPosition > 400){\n            setVisible(true);\n        } else {\n            setVisible(false);\n        }\n        \n        return () => {\n            window.removeEventListener(\"scroll\", handleScroll);\n        };\n\n    }, [scrollPosition]);\n\n    if(!visible) {\n        return false;\n    }\n\n    return (\n        <div className = \"scrollToTop\" onClick = {scrollToTop}>\n            <FaArrowCircleUp className=\"topIcon\"/>\n        </div>\n    );\n}\n\nexport default ScrollToTopHook;"]},"metadata":{},"sourceType":"module"}